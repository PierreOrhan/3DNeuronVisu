from skimage.filters import gaussianimport numpy as npfrom Converter import *import tiffilefrom tqdm import tqdm#initialShape:(481, 3, 4865, 9683)class GaussianFilter:    def __init__(self,file="../StackVecteur_185.tif"):        print("loading in memmap")        self.mem=tiffile.memmap(file)        print("finished loading in memap")    def gaussianFilter(self,posDic={'x':[2000,2500],'y':[3000,3500],'z':[50,220]}):        conv=MyFormatConverter(True)        print("loading in memory")        mem=self.mem        bigStack=np.array(mem[posDic['z'][0]:posDic['z'][1],:,posDic['x'][0]:posDic['x'][1],posDic['y'][0]:posDic['y'][1]].tolist(),dtype=np.float32)        print("moving axis")        bigStack=np.moveaxis(bigStack,1,3)        bigStack=np.moveaxis(bigStack,0,2)        stack=conv.convertRawStack(bigStack)        print("using skimage filters")        stackFloat=conv.from255toFloat(stack)        stackOut=np.empty(stack.shape,dtype=np.uint8)        stackOut=np.array(gaussian(stackFloat,multichannel=True)*255,dtype=np.uint8)        return stackOut